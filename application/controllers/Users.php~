<?php

class Users extends CI_Controller {

    public function __construct() {
        parent::__construct();
        $this->load->model('user_model');
        $this->load->helper(array('form', 'url'));
        $this->load->library(array('session', 'form_validation'));
    }

    public function index() {
        $this->register();
    }

    public function register() {
	$data=array();
	$data['title'] = 'Register';
	if($this->input->post('register')=='register'){

		$this->form_validation->set_rules('firstname', 'First Name', 'trim|required|alpha|min_length[3]|max_length[50]');
			$this->form_validation->set_rules('lastname', 'Last Name', 'trim|required|alpha|min_length[3]|max_length[50]');
			$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email|is_unique[user.email]');
			$this->form_validation->set_rules('password', 'Password', 'trim|required|md5');
			$this->form_validation->set_rules('cpassword', 'Confirm Password', 'trim|required|md5|matches[password]');
			
		//echo "<pre>";print_r($_FILES);exit;
			if ($this->form_validation->run() === FALSE) {
			    // $this->load->view('templates/header', $data);
			    // $this->load->view('users/register');
			    // $this->load->view('templates/footer');

			} else {
			    if ($this->user_model->set_user()) {
				$target_dir = FULL_PATH."uploads/";
				$exp=explode('.',$_FILES["picture"]["name"]);
				$ext=end($exp);
				$file_name = time().mt_rand(5, 10).".".$ext;   
				$target_file = $target_dir . $file_name;
				$uploadOk = 1;
				$imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));
				 $check = getimagesize($_FILES["picture"]["tmp_name"]);
				    if($check !== false) {
					echo "File is an image - " . $check["mime"] . ".";
					$uploadOk = 1;
				    } else {
					echo "File is not an image.";
					$uploadOk = 0;
				    }
				
				// Check if file already exists
				if (file_exists($target_file)) {
				    echo "Sorry, file already exists.";
				    $uploadOk = 0;
				}
				// Check file size
				if ($_FILES["picture"]["size"] > 500000) {
					$this->session->set_flashdata('msg_error', 'Sorry, your file is too large.');
					 $uploadOk = 0;
					redirect('users/register');

				}
				// Allow certain file formats
				if($imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg"
				&& $imageFileType != "gif" ) {
					$this->session->set_flashdata('msg_error', 'Sorry, only JPG, JPEG, PNG & GIF files are allowed');
					 $uploadOk = 0;
					redirect('users/register');    
				   
				}
				// Check if $uploadOk is set to 0 by an error
				if ($uploadOk == 0) {
				    $this->session->set_flashdata('msg_error', 'Sorry, there was an error uploading your file');
					redirect('users/register');
				} else {
				    if (move_uploaded_file($_FILES["fileToUpload"]["tmp_name"], $target_file)) {
					//echo "The file ". basename( $_FILES["fileToUpload"]["name"]). " has been uploaded.";
					$this->session->set_flashdata('msg_success', 'has been uploaded');
					redirect('users/register');
				    } else {
					//echo "Sorry, there was an error uploading your file.";
					$this->session->set_flashdata('msg_error', 'Sorry, there was an error uploading your file');
					redirect('users/register');
				    }
				}
				$this->session->set_flashdata('msg_success', 'Registration Successful!');
				redirect('users/register');
			    } else {
				$this->session->set_flashdata('msg_error', 'Error! Please try again later.');
				redirect('users/register');
			    }
			}

		}
			$this->load->view('templates/header', $data);
			    $this->load->view('users/register');
			    $this->load->view('templates/footer');
        
    }

    public function login() {
//echo "fgfgfgdgdfg";exit;
        $email = $this->input->post('email');
        $password = $this->input->post('password');

        $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
        $this->form_validation->set_rules('password', 'Password', 'trim|required|md5');

        $data['title'] = 'Login';

        if ($this->form_validation->run() === FALSE) {
            $this->load->view('templates/header', $data);
            $this->load->view('users/login');
            $this->load->view('templates/footer');

        } else {
            if ($user = $this->user_model->get_user_login($email, $password)) {
                /*$user_data = array(
                              'email' => $email,
                              'is_logged_in' => true
                         );
                     
                $this->session->set_userdata($user_data);*/

                $this->session->set_userdata('email', $email);
                $this->session->set_userdata('user_id', $user['id']);
                $this->session->set_userdata('is_logged_in', true);


                $this->session->set_flashdata('msg_success', 'Login Successful!');
                redirect('news');
            } else {
                $this->session->set_flashdata('msg_error', 'Login credentials does not match!');

                $currentClass = $this->router->fetch_class(); // class = controller
                $currentAction = $this->router->fetch_method(); // action = function

                redirect("$currentClass/$currentAction");
                //redirect('user/login');
            }
        }
    }

    public function logout() {
        if ($this->session->userdata('is_logged_in')) {

            //$this->session->unset_userdata(array('email' => '', 'is_logged_in' => ''));
            $this->session->unset_userdata('email');
            $this->session->unset_userdata('is_logged_in');
            $this->session->unset_userdata('user_id');
        }
        redirect('users/login');
    }
}
